name: "Terraform"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to deploy'
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
        default: 'dev'

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.5.0"
        terraform_wrapper: false

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check -recursive
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: |
        cd environments/${{ github.event.inputs.environment || 'dev' }}
        terraform init
        
    - name: Terraform Validate
      id: validate
      run: |
        cd environments/${{ github.event.inputs.environment || 'dev' }}
        terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: |
        cd environments/${{ github.event.inputs.environment || 'dev' }}
        terraform plan -no-color -out=tfplan
      continue-on-error: true

    - name: Terraform Apply
      if: |
        (github.ref == 'refs/heads/main' && github.event_name == 'push') ||
        github.event_name == 'workflow_dispatch'
      run: |
        cd environments/${{ github.event.inputs.environment || 'dev' }}
        terraform apply -auto-approve tfplan
